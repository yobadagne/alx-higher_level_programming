How to use 0-add_integer.py
================================
reStructuredText file "0-add_integer.txt"
This library is very simple, since it only has one function called
"add_integer()"
--------------------------------
First import "add_integer" from the "0-add_integer" module:

::

    >>> add_integer = __import__('0-add_integer').add_integer

Function that adds 2 integers, Returns an integer:
the addition of a and b, a and b must be integers or floats.

::

    >>> add_integer(8, 16)
    24
    >>> add_integer(100.3, -2)
    98
    >>> add_integer(-100, 2.2)
    -98
    >>> add_integer(-8, -8)
    -16
    >>> add_integer((2))
    100

a and b must be integers or floats, otherwise raise a TypeError exception
with the message a must be an integer or b must be an integer

::

    >>> add_integer('string', 16)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer('8', 16)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer(8, 'string')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>> add_integer(8, '16')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>> add_integer('c', 'string')
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer(float(2**1023), float(2**1023))
    Traceback (most recent call last):
    ...
    OverflowError: overflow error
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
